# Main sequence turn-off event chain
# Event ids 1001-2000
namespace = stellar_evolution

planet_event = {
	id = stellar_evolution.1001
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		add_modifier = {
			modifier = evolving_main_sequence
		}
		every_country = {
			limit = {
				is_ai = no
			}
			country_event = {
				id = stellar_evolution.1011
			}
		}
		# In 10-15 years, start the actual chain that evolves the star into a red giant.
		planet_event = {
			id = stellar_evolution.1101
			days = 3600
			random = 1800
		}
	}
}

# Associated country events
country_event = {
	id = stellar_evolution.1011
	title = stellar_evolution.1011.name
	desc = stellar_evolution.1011.desc
	picture = GFX_evt_star_white
	show_sound = event_solar_fusion
	location = from
	option = {
		name = "OK"
	}
	is_triggered_only = yes
}

# Star gets closer to evolving
planet_event = {
	id = stellar_evolution.1101
	hide_window = yes
	is_triggered_only = yes
	# Some mods alter the star's class.
	# As a failsafe, abort if the star no longer belongs to a class that can evolve.
	trigger = {
		OR = {
			is_planet_class = pc_b_star
			is_planet_class = pc_a_star
		}
	}
	immediate = {
		every_country = {
			limit = {
				is_ai = no
			}
			country_event = {
				id = stellar_evolution.1111
			}
		}
		set_global_flag = stellar_evolution_happened
		solar_system = {
			set_star_flag = stellar_evolution_active
		}
		if = {
			limit = {
				has_owner = yes
				owner = {
					is_ai = no
					NOT = {
						has_country_flag = stellar_evolution_policy_informed
					}
				}
			}
			owner = {
				country_event = {
					id = stellar_evolution.1121
					days = 10
				}
				set_country_flag = stellar_evolution_policy_informed
			}
		}
		planet_event = {
			id = stellar_evolution.1201
			days = 1800
			random = 1800
		}
	}
}

# Broadcast country event for all countries
country_event = {
	id = stellar_evolution.1111
	title = stellar_evolution.1111.name
	desc = stellar_evolution.1111.desc
	picture = GFX_evt_star_white
	show_sound = event_solar_fusion
	location = from
	option = {
		name = "OK"
	}
	is_triggered_only = yes
}

# Country event for the owner being asked to allow other nations to observe
country_event = {
	id = stellar_evolution.1121
	title = stellar_evolution.1121.name
	desc = stellar_evolution.1121.desc
	picture = GFX_evt_physics_research
	show_sound = event_factions
	option = {
		name = "stellar_evolution_acknowledged"
	}
	is_triggered_only = yes
}

# Star starts evolving
planet_event = {
	id = stellar_evolution.1201
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		OR = {
			is_planet_class = pc_b_star
			is_planet_class = pc_a_star
		}
	}
	immediate = {
		every_country = {
			limit = {
				is_ai = no
			}
			country_event = {
				id = stellar_evolution.1211
			}
		}
		# Set up recursive loop
		planet_event = {
			id = stellar_evolution.1301
		}
	}
}

# Associated country event
country_event = {
	id = stellar_evolution.1211
	title = stellar_evolution.1211.name
	desc = stellar_evolution.1211.desc
	picture = GFX_evt_star_white
	show_sound = event_solar_fusion
	location = from
	option = {
		name = "OK"
	}
	is_triggered_only = yes
}

# Star evolves - recursive loop
planet_event = {
	id = stellar_evolution.1301
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		OR = {
			is_planet_class = pc_b_star
			is_planet_class = pc_a_star
		}
	}
	immediate = {
		random_list = {
			50 = {
			}
			50 = {
				change_planet_size = 1
			}
			1 = {
				modifier = {
					factor = 0
					has_planet_flag = stellar_evolution_spectrum_changed
				}
				change_planet_size = 1
				if = {
					limit = {
						is_planet_class = pc_b_star
					}
					change_pc = pc_a_star
				}
				else_if = {
					limit = {
						is_planet_class = pc_a_star
					}
					change_pc = pc_f_star
				}
				set_planet_flag = stellar_evolution_spectrum_changed
			}
		}
		spawn_sun_temperature_effect = yes
		planet_event = {
			id = stellar_evolution.1301
			days = 1800
			random = 1800
		}
	}
}
